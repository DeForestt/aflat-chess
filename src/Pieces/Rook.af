
.needs <std>

import Board from "./src/Board.af";
import Piece from "./src/Piece.af";
import {killPiece, forceMove} from "./src/Piece.af" under pc;
import {print, printInt} from "io" under io;

class Rook signs Piece {
    adr init(int x, int y, int color, Board board);
};

int moveRook(Rook p, int x, int y, int check){
    int color; int myX; int myY; Board b;
    
    if(x > 7) {return 0;};
    if(y > 7) {return 0;};
    if(x < 0) {return 0;};
    if(y < 0) {return 0;};

    color = p.color;
    b = p.board;

    myX = p.x;
    myY = p.y;
    int dX = x - myX;
    int dY = y - myY;
    Piece coll = b.inspect(x, y);

    if(coll != NULL){
        if(coll.color == color){
            return 0;
        };
    };

    if (dX != 0){
        if (dY != 0){
            return  0;
        };
    };

    if (dX == 0){
        if (dY == 0){
            return 0;
        };
    };

    // Check for obstruction
    if (dX != 0){
        int spaceB;
        spaceB = dX;
        if (spaceB < 0){
            spaceB = spaceB * -1;
        };
        for int i = 1; i < spaceB; i = i + 1 {
            if (dX > 0){
                int nx = myX + i;
                Piece obs = b.inspect(nx, myY);
                if (obs != NULL){
                    return 0;
                };
            };

            if (dX < 0){
                    int nx = x + i;
                    Piece obs = b.inspect(nx, myY);
                if (obs != NULL){
                    return 0;
                };
            };
        };
    };

    if (dY != 0){
        int spaceB;
        spaceB = dY;
        if (spaceB < 0) {
            spaceB = spaceB * -1;
        };

        for  int i = 1; i < spaceB; i = i + 1 {
            if (dY > 0){
                int ny = myY + i;
                Piece obs = b.inspect(myX, ny);
                if (obs != NULL){
                    io.print("obstruction"); io.print(obs.face); io.print( " at : ");
                    io.printInt(myX); io.print(" "); io.printInt(ny);
                    io.print("\n");
                    return 0;
                };
            };
            if (dY < 0){
                int ny = y + i;
                Piece obs = b.inspect(myX, ny);
                if (obs != NULL){
                    io.print("obstruction"); io.print(obs.face); io.print( " at : ");
                    io.printInt(myX); io.print(" "); io.printInt(ny);
                    io.print("\n");
                    return 0;
                };
            };
        };
    };

    if (coll != NULL){
        if (check == 0){
            coll.die();
        };
    };
    if(check == 0){
        p.x = x;
        p.y = y;
    };

    return 1;
};

Rook init@Rook(int x, int y, int color, Board board) {
    my.x = x;
    my.y = y;
    my.color = color;
    my.board = board;

    my.die = pc.killPiece;
    my.draw = [Rook r] => {
        io.print(r.face);
    };

    my.move = moveRook;
    my.forceMove = pc.forceMove;

    if my.color == 1
        my.face = "♖"
    else
        my.face = "♜";
};